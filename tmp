handle_pb_message(Player, Msg) ->
  case Msg of
    #message{type = 'JOIN_TABLE_REQ', data = Data} ->
      #jointablereq{table_id = TableId} = messages_pb:decode_jointablereq(Data),
      {ok, {TableId1, Players, _BuyIn}} = Player:call(#c2s_join_table{table_id = TableId}),
      ok = io:format("~p~n", [Players]),
      PlayersPb = [#playerpb{id = Id, name = Name, chips = Chips} || #player_in_table{id = Id, name = Name, chips = Chips} <- Players],
      TablePb = #tablepb{id = TableId1, players = PlayersPb},
      Res = #jointableres{errno = 0, table = TablePb},
      #message{type = 'JOIN_TABLE_RES', data = messages_pb:encode(Res)};

    #message{type = 'LEAVE_TABLE_REQ', data = Data} ->
      #leavetablereq{} = messages_pb:decode_leavetablereq(Data),
      ok = Player:call(#c2s_leave_table{}),
      Res = #leavetableres{errno = 0},
      #message{type = 'LEAVE_TABLE_RES', data = messages_pb:encode(Res)};

    #message{type = 'LIST_TABLE_REQ', data = Data} ->
      #listtablereq{} = messages_pb:decode_listtablereq(Data),
      TableIds = Player:call(#c2s_list_table{}),
      Res = #listtableres{errno = 0, table_ids = TableIds},
      #message{type = 'LIST_TABLE_RES', data = messages_pb:encode(Res)};

    #message{type = 'LEAVE_GAME_REQ', data = Data} ->
      #leavegamereq{} = messages_pb:decode_leavegamereq(Data),
      %%ok = Player:call(#c2s_leave_game{}),
      ignored = Player:call(#c2s_leave_game{}),
      Res = #leavegameres{errno = 0},
      #message{type = 'LEAVE_GAME_RES', data = messages_pb:encode(Res)};

    #message{type = 'ACTION_REQ', data = Data} ->
      #actionreq{action = Action, amount = Amount} = messages_pb:decode_actionreq(Data),
      %ok = Player:call(#c2s_action{action = Action, amount = Amount}),
      ignored = Player:call(#c2s_action{action = Action, amount = Amount}),
      Res = #actionres{errno = 0},
      #message{type = 'ACTION_RES', data = messages_pb:encode(Res)};
    _Other ->
      <<"not recognized protocol">>
  end.
